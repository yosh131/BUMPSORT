<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>楽曲ソート - 選曲</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 400px;
            margin: auto;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        }

        h2 {
            font-size: 18px;
            color: #333333;
            margin-bottom: 20px;
        }

        .album-list {
            margin-bottom: 20px;
        }

        .album-toggle {
            display: block;
            width: 100%;
            padding: 10px;
            margin-bottom: 5px;
            font-size: 16px;
            color: #333333;
            background-color: #e0e0e0;
            border: none;
            border-radius: 5px;
            text-align: left;
            cursor: pointer;
        }

        .song-list {
            margin-top: 10px;
            padding-left: 20px;
            overflow: hidden;
            transition: max-height 0.3s ease-out;
            max-height: 0;
        }

        .song-list.open {
            max-height: 1000px;
            /* 展開時の最大高さを調整 */
        }

        .song-list label {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
            font-size: 15px;
        }

        .song-list input[type="checkbox"] {
            margin-right: 10px;
        }

        .hidden {
            display: none;
        }

        .submit-button {
            display: block;
            width: 100%;
            padding: 10px;
            font-size: 16px;
            color: #ffffff;
            background-color: #007BFF;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .selection-count {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #464646;
            color: #FFF;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
        }


        .footer {
            text-align: center;
            margin-top: 40px;
            font-size: 14px;
            color: #888888;
        }

        .footer a {
            color: #007BFF;
            text-decoration: none;
        }

        .footer a:hover {
            text-decoration: underline;
        }
    </style>
</head>

<body>
    <div class="container">
        <h2>①好きな曲を選んでください</h2>

        <!-- アルバムのリスト -->
        <div class="album-list" id="albumList">
            <!-- JavaScriptがここにアルバムごとの曲リストを生成します -->
        </div>

        <button class="submit-button">選択完了！</button>
        <div class="selection-count">選択曲数: <span id="selectedCount"></span></div>
    </div>

    <div class="footer">
        <footer>
            <p>Created by <a href="https://twitter.com/yoshi_b_o_c" target="_blank">{{ author }}</a> | Version: {{
                version
                }}
            </p>
        </footer>
    </div>

    <script>
        let totalSongs = 0;
        // CSVファイルをShift-JISで読み込む関数
        function loadCSV() {
            fetch('static/songdata/songs.csv')  // 読み込むCSVファイルのパス
                .then(response => response.arrayBuffer())
                .then(buffer => {
                    const decoder = new TextDecoder('shift-jis');
                    const text = decoder.decode(new Uint8Array(buffer));
                    const data = parseCSV(text);
                    renderAlbumList(data);
                });
        }

        // CSVのテキストをパースして二次元配列にする関数
        function parseCSV(text) {
            const lines = text.trim().split('\n');
            const albums = {};
            lines.slice(1).forEach(line => {  // 一行目をスキップ
                const [id, song, album, dummy] = line.split(',');
                if (!albums[album]) {
                    albums[album] = [];
                }
                albums[album].push(song);
            });
            return albums;
        }

        // アルバムリストを表示する関数
        function renderAlbumList(albums) {
            const albumListElement = document.getElementById('albumList');

            for (const [album, songs] of Object.entries(albums)) {
                const albumToggle = document.createElement('button');
                albumToggle.className = 'album-toggle';
                albumToggle.textContent = `▶ ${album}`;
                albumToggle.onclick = () => toggleSongs(albumToggle, album);

                const songList = document.createElement('div');
                songList.id = album;
                songList.className = 'song-list hidden';

                songs.forEach(song => {
                    const songItem = document.createElement('label');
                    const checkbox = document.createElement('input');
                    checkbox.type = 'checkbox';
                    checkbox.onclick = () => updateSelectionCount();

                    songItem.appendChild(checkbox);
                    songItem.appendChild(document.createTextNode(song));
                    songList.appendChild(songItem);
                });

                albumListElement.appendChild(albumToggle);
                albumListElement.appendChild(songList);
                totalSongs += songs.length;
            }
            document.getElementById('selectedCount').textContent = `0/${totalSongs}`;
        }

        // 曲リストの表示/非表示とアイコンを切り替える関数
        // function toggleSongs(albumToggle, albumId) {
        //     const songList = document.getElementById(albumId);
        //     if (songList.classList.contains('open')) {
        //         songList.classList.remove('open');
        //         albumToggle.textContent = `▶ ${albumToggle.textContent.substring(2)}`;
        //     } else {
        //         songList.classList.add('open');
        //         albumToggle.textContent = `▼ ${albumToggle.textContent.substring(2)}`;
        //     }
        // }
        function toggleSongs(albumToggle, albumId) {
            const songList = document.getElementById(albumId);
            if (songList.classList.contains('hidden')) {
                songList.classList.remove('hidden');
                albumToggle.textContent = `▼ ${albumToggle.textContent.substring(2)}`;
            } else {
                songList.classList.add('hidden');
                albumToggle.textContent = `▶ ${albumToggle.textContent.substring(2)}`;
            }
        }


        // 選択された曲の数を更新する関数
        function updateSelectionCount() {
            const selectedSongs = document.querySelectorAll('.song-list input[type="checkbox"]:checked');
            document.getElementById('selectedCount').textContent = `${selectedSongs.length}/${totalSongs}`;
        }

        // ページロード時にCSVを読み込む
        window.onload = loadCSV;
    </script>
</body>

</html>